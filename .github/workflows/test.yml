name: CI

on: [push]

jobs:
  # test:
  #   name: Test
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1

  #       # https://github.com/mvdan/github-actions-golang#how-do-i-set-up-caching-between-builds
  #     - uses: actions/cache@v2
  #       with:
  #         # In order:
  #         # * Module download cache
  #         # * Build cache (Linux)
  #         # * Build cache (Mac)
  #         # * Build cache (Windows)
  #         path: |
  #           ~/go/pkg/mod
  #           ~/.cache/go-build
  #           ~/Library/Caches/go-build
  #           %LocalAppData%\go-build
  #         key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
  #         restore-keys: |
  #           ${{ runner.os }}-go-
  #     - name: Setup Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: "1.17.3"
  #     - name: Lint
  #       run: go vet ./...

  #     - name: Test
  #       run: go test ./...

  # golangci-lint:
  #   name: Go Lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - name: golangci-lint
  #       uses: golangci/golangci-lint-action@v2
  #       timeout-minutes: 5
  #       with:
  #         version: v1.39
  #         args: --timeout 2m

  linux-installs:
    name: assume installs and runs on linux
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            %LocalAppData%\go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: log shell
        run: echo $SHELL
      - name: Setup Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.17.3"
      - name: install granted
        run: make cli
      - name: build test browser
        run: make test-browser-binary
      # - shell: bash
      #   run: ./scripts/test.sh

      - name: set default browser
        # configures granted to use the test browser binary
        run: dgranted browser set -b chrome -p ./bin/tbrowser
      - name: bash
        run: dassume -auto-configure-shell
        shell: bash
